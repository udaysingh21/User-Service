/*
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.16.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.vrms.user.api;

import com.vrms.user.model.ErrorResponse;
import com.vrms.user.model.LoginRequest;
import com.vrms.user.model.LoginResponse;
import com.vrms.user.model.UserBase;
import com.vrms.user.model.UserResponse;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.ExampleObject;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-10-28T12:27:29.350038+05:30[Asia/Kolkata]", comments = "Generator version: 7.16.0")
@Validated
@Tag(name = "Auth", description = "the Auth API")
public interface AuthApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    public static final String PATH_AUTH_LOGIN_POST = "/auth/login";
    /**
     * POST /auth/login : Authenticate user
     * Authenticate user and issue JWT
     *
     * @param loginRequest  (required)
     * @return Authentication successful (status code 200)
     *         or Invalid credentials (status code 401)
     */
    @Operation(
        operationId = "authLoginPost",
        summary = "Authenticate user",
        description = "Authenticate user and issue JWT",
        tags = { "Auth" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Authentication successful", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = LoginResponse.class))
            }),
            @ApiResponse(responseCode = "401", description = "Invalid credentials", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorResponse.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = AuthApi.PATH_AUTH_LOGIN_POST,
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<LoginResponse> authLoginPost(
        @Parameter(name = "LoginRequest", description = "", required = true) @Valid @RequestBody LoginRequest loginRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"expiresIn\" : 3600, \"role\" : \"VOLUNTEER\", \"accessToken\" : \"accessToken\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"path\" : \"path\", \"error\" : \"error\", \"message\" : \"message\", \"timestamp\" : \"2000-01-23T04:56:07.000+00:00\", \"status\" : 6 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    public static final String PATH_AUTH_REGISTER_POST = "/auth/register";
    /**
     * POST /auth/register : Register a new user
     * Register a new user (Volunteer, NGO, Corporate, or Admin)
     *
     * @param userBase  (required)
     * @return User registered successfully (status code 201)
     *         or Invalid input (status code 400)
     */
    @Operation(
        operationId = "authRegisterPost",
        summary = "Register a new user",
        description = "Register a new user (Volunteer, NGO, Corporate, or Admin)",
        tags = { "Auth" },
        responses = {
            @ApiResponse(responseCode = "201", description = "User registered successfully", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = UserResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid input", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorResponse.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = AuthApi.PATH_AUTH_REGISTER_POST,
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<UserResponse> authRegisterPost(
        @Parameter(name = "UserBase", description = "", required = true) @Valid @RequestBody UserBase userBase
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"role\" : \"role\", \"id\" : 0, \"message\" : \"message\", \"email\" : \"email\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"path\" : \"path\", \"error\" : \"error\", \"message\" : \"message\", \"timestamp\" : \"2000-01-23T04:56:07.000+00:00\", \"status\" : 6 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
